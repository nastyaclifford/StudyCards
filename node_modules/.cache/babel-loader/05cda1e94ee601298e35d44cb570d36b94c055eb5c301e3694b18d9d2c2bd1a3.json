{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport TableItem from \"../../components/TableItem/TableItem\";\n//import words from \"../../data/words.json\"\nimport POST from \"../../services/POST\";\nimport { MyContext } from \"../../context/MyContext\";\nimport { useContext } from \"react\";\nimport style from './table.module.scss'; //импортируем компонент TableItem, массив с информацией о карточках, стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  //создаем компонент Table\n  const {\n    words,\n    flag,\n    setFlag\n  } = useContext(MyContext);\n  async function addWordsServer() {\n    await POST.postWord({\n      \"id\": \"1555\",\n      \"english\": \"post\",\n      \"transcription\": \"[p\\u0259\\u028Ast]\",\n      \"russian\": \"\\u043F\\u043E\\u0447\\u0442\\u0430\",\n      \"tags\": \"\",\n      \"tags_json\": \"[]\"\n    });\n    setFlag(!flag);\n  }\n  return (\n    /*#__PURE__*/\n    //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.table,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.row,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Russian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), words.map((item, index) => /*#__PURE__*/_jsxDEV(TableItem, {\n          ...item,\n          flag: flag,\n          setFlag: setFlag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onclick: addWordsServer,\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Table, \"qBVHrmtKJ32N37YQ7B5/Pbn4Hos=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["TableItem","POST","MyContext","useContext","style","jsxDEV","_jsxDEV","Table","_s","words","flag","setFlag","addWordsServer","postWord","children","className","table","row","col","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onclick","_c","$RefreshReg$"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Table/Table.jsx"],"sourcesContent":["import TableItem from \"../../components/TableItem/TableItem\"\r\n//import words from \"../../data/words.json\"\r\nimport POST from \"../../services/POST\";\r\nimport { MyContext } from \"../../context/MyContext\";\r\nimport { useContext } from \"react\";\r\nimport style from './table.module.scss' //импортируем компонент TableItem, массив с информацией о карточках, стили\r\n\r\n\r\n\r\n\r\nfunction Table(){ //создаем компонент Table\r\n    const {words, flag, setFlag} = useContext(MyContext) \r\n    \r\n    async function addWordsServer() {\r\n        await POST.postWord({\r\n            \"id\":\"1555\",\"english\":\"post\",\"transcription\":\"[p\\u0259\\u028Ast]\",\"russian\":\"\\u043F\\u043E\\u0447\\u0442\\u0430\",\"tags\":\"\",\"tags_json\":\"[]\"\r\n        });\r\n        setFlag(!flag)\r\n    }\r\n    return ( //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\r\n        <div>\r\n        <div className={style.table}>\r\n        <div className={style.row}>\r\n        <div className={style.col}>English</div>\r\n        <div className={style.col}>Transcription</div>\r\n        <div className={style.col}>Russian</div>\r\n        <div className={style.col}>Edit</div>\r\n        </div>\r\n        {words.map ((item, index)=> (\r\n        <TableItem \r\n        key = {index}\r\n        {...item} flag={flag} setFlag={setFlag}/>))}</div>\r\n        <button onclick={addWordsServer}>POST</button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Table;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,sCAAsC;AAC5D;AACA,OAAOC,IAAI,MAAM,qBAAqB;AACtC,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,KAAK,MAAM,qBAAqB,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKxC,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAAE;EACd,MAAM;IAACC,KAAK;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGR,UAAU,CAACD,SAAS,CAAC;EAEpD,eAAeU,cAAcA,CAAA,EAAG;IAC5B,MAAMX,IAAI,CAACY,QAAQ,CAAC;MAChB,IAAI,EAAC,MAAM;MAAC,SAAS,EAAC,MAAM;MAAC,eAAe,EAAC,mBAAmB;MAAC,SAAS,EAAC,gCAAgC;MAAC,MAAM,EAAC,EAAE;MAAC,WAAW,EAAC;IACtI,CAAC,CAAC;IACFF,OAAO,CAAC,CAACD,IAAI,CAAC;EAClB;EACA;IAAA;IAAS;IACLJ,OAAA;MAAAQ,QAAA,gBACAR,OAAA;QAAKS,SAAS,EAAEX,KAAK,CAACY,KAAM;QAAAF,QAAA,gBAC5BR,OAAA;UAAKS,SAAS,EAAEX,KAAK,CAACa,GAAI;UAAAH,QAAA,gBAC1BR,OAAA;YAAKS,SAAS,EAAEX,KAAK,CAACc,GAAI;YAAAJ,QAAA,EAAC;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxChB,OAAA;YAAKS,SAAS,EAAEX,KAAK,CAACc,GAAI;YAAAJ,QAAA,EAAC;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9ChB,OAAA;YAAKS,SAAS,EAAEX,KAAK,CAACc,GAAI;YAAAJ,QAAA,EAAC;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxChB,OAAA;YAAKS,SAAS,EAAEX,KAAK,CAACc,GAAI;YAAAJ,QAAA,EAAC;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,EACLb,KAAK,CAACc,GAAG,CAAE,CAACC,IAAI,EAAEC,KAAK,kBACxBnB,OAAA,CAACN,SAAS;UAAA,GAENwB,IAAI;UAAEd,IAAI,EAAEA,IAAK;UAACC,OAAO,EAAEA;QAAQ,GADhCc,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC4B,CAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClDhB,OAAA;QAAQoB,OAAO,EAAEd,cAAe;QAAAE,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;AAGd;AAACd,EAAA,CA1BQD,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AA4Bd,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}