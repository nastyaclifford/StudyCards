{"ast":null,"code":"import{useState}from'react';import style from'./tableItem.module.scss';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPenToSquare,faCircleCheck,faRotateLeft,faTrash}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function TableItem(props){const[edit,setEdit]=useState(true);const[newEnglish,setNewEnglish]=useState('');const[newTranscription,setNewTranscription]=useState('');const[newRussian,setNewRussian]=useState('');const{english,transcription,russian,id,delWord,updWord}=props;const rusLower='абвгдеёжзийклмнопрстуфхцчшщъыьэюя';const rusUpper=rusLower.toUpperCase();const enLower='abcdefghijklmnopqrstuvwxyz';const enUpper=enLower.toUpperCase();const rus=rusLower+rusUpper;const en=enLower+enUpper;function handleChange(event){const{name,value}=event.target;if(name==='newEnglish'){setNewEnglish(value);}else if(name==='newTranscription'){setNewTranscription(value);}else if(name==='newRussian'){setNewRussian(value);}}const getChar=event=>String.fromCharCode(event.keyCode||event.charCode);function checkLang(event){const char=getChar(event);const{name}=event.target;if(name==='newEnglish'){if(rus.includes(char)){alert(\"English language expected\");event.target.value='';event.preventDefault();}}else if(name==='newTranscription'){if(rus.includes(char)){alert(\"English language expected\");event.target.value='';event.preventDefault();}}else if(name==='newRussian'){if(en.includes(char)){alert(\"Russian language expected\");event.target.value='';event.preventDefault();}}}function isValidString(str,charset){const regex=new RegExp(\"^[\".concat(charset,\"]+$\"));return regex.test(str);}async function onSaveButtonClick(){console.log('onSaveButtonClick called with ID:',id);if(isValidString(newEnglish,en)&&isValidString(newTranscription,en)&&isValidString(newRussian,rus)){const updatedData={id:id,english:newEnglish,transcription:newTranscription,russian:newRussian,tags:\"\",tags_json:\"[]\"};updWord(id,updatedData);console.log(updatedData);}else console.log(\"Please, check your words once again\");}function editWord(){setEdit(!edit);}return/*#__PURE__*/_jsxs(\"div\",{className:style.row,children:[edit===true?/*#__PURE__*/_jsx(\"div\",{className:style.col,children:english}):/*#__PURE__*/_jsx(\"input\",{name:\"newEnglish\",onChange:handleChange,onKeyPress:checkLang,className:newEnglish.length===0?style.input_error:style.input,placeholder:english}),edit===true?/*#__PURE__*/_jsx(\"div\",{className:style.col,children:transcription}):/*#__PURE__*/_jsx(\"input\",{name:\"newTranscription\",onChange:handleChange,onKeyPress:checkLang,className:newTranscription.length===0?style.input_error:style.input,placeholder:transcription}),edit===true?/*#__PURE__*/_jsx(\"div\",{className:style.col,children:russian}):/*#__PURE__*/_jsx(\"input\",{name:\"newRussian\",onChange:handleChange,onKeyPress:checkLang,className:newRussian.length===0?style.input_error:style.input,placeholder:russian}),/*#__PURE__*/_jsxs(\"div\",{className:style.col,children:[/*#__PURE__*/_jsxs(\"div\",{className:style.col_buttons,children:[edit===true?\" \":/*#__PURE__*/_jsx(\"button\",{disabled:newEnglish.length===0||newTranscription.length===0||newRussian.length===0,onClick:onSaveButtonClick,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCircleCheck})}),edit===true?/*#__PURE__*/_jsx(\"button\",{onClick:editWord,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPenToSquare})}):/*#__PURE__*/_jsx(\"button\",{onClick:editWord,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faRotateLeft})})]}),\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:style.col,children:/*#__PURE__*/_jsx(\"button\",{onClick:delWord,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTrash})})})]});}","map":{"version":3,"names":["useState","style","FontAwesomeIcon","faPenToSquare","faCircleCheck","faRotateLeft","faTrash","jsx","_jsx","jsxs","_jsxs","TableItem","props","edit","setEdit","newEnglish","setNewEnglish","newTranscription","setNewTranscription","newRussian","setNewRussian","english","transcription","russian","id","delWord","updWord","rusLower","rusUpper","toUpperCase","enLower","enUpper","rus","en","handleChange","event","name","value","target","getChar","String","fromCharCode","keyCode","charCode","checkLang","char","includes","alert","preventDefault","isValidString","str","charset","regex","RegExp","concat","test","onSaveButtonClick","console","log","updatedData","tags","tags_json","editWord","className","row","children","col","onChange","onKeyPress","length","input_error","input","placeholder","col_buttons","disabled","onClick","icon"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/components/TableItem/TableItem.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport style from './tableItem.module.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPenToSquare, faCircleCheck, faRotateLeft, faTrash } from '@fortawesome/free-solid-svg-icons'; \r\n\r\n\r\n\r\nexport default function TableItem(props) {\r\n    const [edit, setEdit] = useState (true); \r\n    const [newEnglish, setNewEnglish] = useState('');\r\n    const [newTranscription, setNewTranscription] = useState('');\r\n    const [newRussian, setNewRussian] = useState('');\r\n    const {english, transcription, russian, id, delWord, updWord } = props;\r\n\r\n    const rusLower = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'\r\n    const rusUpper = rusLower.toUpperCase()\r\n    const enLower = 'abcdefghijklmnopqrstuvwxyz'\r\n    const enUpper = enLower.toUpperCase()\r\n    const rus = rusLower + rusUpper\r\n    const en = enLower + enUpper\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        if (name === 'newEnglish') {\r\n            setNewEnglish(value);\r\n        } else if (name === 'newTranscription') {\r\n            setNewTranscription(value);\r\n        } else if (name === 'newRussian') {\r\n            setNewRussian(value);\r\n        }\r\n    }\r\n\r\n    const getChar = (event) => String.fromCharCode(event.keyCode || event.charCode)\r\n\r\n    function checkLang (event) {\r\n      const char = getChar(event)\r\n      const {name}= event.target;\r\n        if (name === 'newEnglish') {\r\n            if (rus.includes(char)) {\r\n                alert (\"English language expected\");\r\n                event.target.value = '';\r\n                event.preventDefault()\r\n            }\r\n        } else if (name === 'newTranscription') {\r\n            if (rus.includes(char)) {\r\n                alert (\"English language expected\");\r\n                event.target.value = '';\r\n                event.preventDefault()\r\n            }\r\n        } else if (name === 'newRussian') {\r\n            if (en.includes(char)) {\r\n             alert (\"Russian language expected\");\r\n             event.target.value = '';\r\n             event.preventDefault()\r\n        }\r\n    }\r\n}\r\n\r\nfunction isValidString(str, charset) {\r\n    const regex = new RegExp(`^[${charset}]+$`);\r\n    return regex.test(str);\r\n  }\r\n  \r\n\r\n\r\n  async function onSaveButtonClick() {\r\n    console.log('onSaveButtonClick called with ID:', id);\r\n    if (\r\n        isValidString(newEnglish, en) &&\r\n        isValidString(newTranscription, en) &&\r\n        isValidString(newRussian, rus)\r\n      ) {\r\n                const updatedData = {\r\n                id: id,\r\n                english: newEnglish,\r\n                transcription: newTranscription,\r\n                russian: newRussian,\r\n                tags: \"\",\r\n                tags_json: \"[]\"\r\n            };\r\n            updWord(id, updatedData);\r\n            console.log(updatedData);\r\n            \r\n    } else \r\n        console.log(\"Please, check your words once again\");\r\n      }\r\n  \r\n      function editWord () { \r\n        setEdit(!edit)\r\n    }\r\n\r\n    return( \r\n        <div className={style.row}>\r\n                    {edit === true ? <div className={style.col}>{english}</div> : <input name=\"newEnglish\" onChange={handleChange} onKeyPress = {checkLang} className={newEnglish.length === 0 ? style.input_error : style.input} placeholder={english}></input>}\r\n                    {edit === true ?<div className={style.col}>{transcription}</div> : <input name=\"newTranscription\" onChange={handleChange} onKeyPress = {checkLang} className={newTranscription.length === 0 ? style.input_error : style.input} placeholder={transcription}></input>}\r\n                    {edit === true ? <div className={style.col}>{russian}</div> : <input name=\"newRussian\" onChange={handleChange} onKeyPress = {checkLang} className={newRussian.length === 0 ? style.input_error : style.input} placeholder={russian}></input>}\r\n                    <div className={style.col}>\r\n                    <div className={style.col_buttons}>\r\n                    {edit === true ? \" \" : <button disabled= {newEnglish.length === 0 || newTranscription.length === 0 || newRussian.length === 0}  onClick={onSaveButtonClick} ><FontAwesomeIcon icon={faCircleCheck} /></button>}\r\n                         {edit === true ? <button onClick={editWord} ><FontAwesomeIcon icon={faPenToSquare} /></button>: <button onClick={editWord} ><FontAwesomeIcon icon={faRotateLeft} /></button>}\r\n                    </div> </div>\r\n                    <div className={style.col}>\r\n                    <button onClick={delWord} ><FontAwesomeIcon icon={faTrash} /></button>\r\n                    </div> \r\n                </div>  \r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}