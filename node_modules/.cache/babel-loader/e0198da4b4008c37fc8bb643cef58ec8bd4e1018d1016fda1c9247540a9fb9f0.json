{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport { observer, inject } from 'mobx-react';\nimport React, { useState } from \"react\";\nimport TableItem from \"../../components/TableItem/TableItem\";\nimport POST from \"../../services/POST\";\nimport style from './table.module.scss'; //импортируем компонент TableItem, массив с информацией о карточках, стили\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = _s(observer(_c = _s(() => {\n  _s();\n  const [newWordEng, setNewWordEng] = useState('');\n  const [newWordRus, setNewWordRus] = useState('');\n  const wordStore = DataMobX.wordStore;\n  async function addWordToServer() {\n    if (newWordEng.trim() === '' || newWordRus.trim() === '') {\n      return;\n    }\n    const newWordData = {\n      id: \"123\",\n      english: newWordEng,\n      transcription: \"transcription\",\n      russian: newWordRus,\n      tags: \"\",\n      tags_json: \"[]\"\n    };\n    await POST.postWord(newWordData);\n    setNewWordEng('');\n    setNewWordRus('');\n    wordStore.toggleFlag();\n  }\n  return (\n    /*#__PURE__*/\n    //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\n    _jsxDEV(DataMobX.observerComponent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.table,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.row_input,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newWordEng,\n              onChange: e => setNewWordEng(e.target.value),\n              className: style.input,\n              placeholder: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newWordRus,\n              onChange: e => setNewWordRus(e.target.value),\n              className: style.input,\n              placeholder: \"Russian\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.col,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: newWordEng.length === 0 || newWordRus.length === 0,\n                onClick: addWordToServer,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCircleCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 115\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.table,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.row,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.col,\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.col,\n              children: \"Transcription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.col,\n              children: \"Russian\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: style.col,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 5\n          }, this), wordStore.words.map((item, index) => /*#__PURE__*/_jsxDEV(TableItem, {\n            ...item,\n            flag: wordStore.flag,\n            setFlag: wordStore.toggleFlag\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 5\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n}, \"u/B6KlZbf7gGbyPvcbIyawVt6fo=\")), \"u/B6KlZbf7gGbyPvcbIyawVt6fo=\");\n_c2 = Table;\nexport default Table;\nvar _c, _c2;\n$RefreshReg$(_c, \"Table$observer\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"names":["observer","inject","React","useState","TableItem","POST","style","FontAwesomeIcon","faCircleCheck","jsxDEV","_jsxDEV","Table","_s","_c","newWordEng","setNewWordEng","newWordRus","setNewWordRus","wordStore","DataMobX","addWordToServer","trim","newWordData","id","english","transcription","russian","tags","tags_json","postWord","toggleFlag","observerComponent","children","className","table","row_input","type","value","onChange","e","target","input","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","col","disabled","length","onClick","icon","row","words","map","item","index","flag","setFlag","_c2","$RefreshReg$"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Table/Table.jsx"],"sourcesContent":["import {observer,inject} from 'mobx-react';\r\nimport React, {useState } from \"react\";\r\nimport TableItem from \"../../components/TableItem/TableItem\"\r\nimport POST from \"../../services/POST\";\r\nimport style from './table.module.scss' //импортируем компонент TableItem, массив с информацией о карточках, стили\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCircleCheck} from '@fortawesome/free-solid-svg-icons'; \r\n\r\n\r\n\r\nconst Table = observer(()=>{\r\nconst [newWordEng, setNewWordEng] = useState('')\r\nconst [newWordRus, setNewWordRus] = useState('')\r\nconst wordStore = DataMobX.wordStore;\r\n\r\nasync function addWordToServer() {\r\n    if (newWordEng.trim() === '' || newWordRus.trim() === '') {\r\n        return;\r\n      }\r\n      const newWordData = {\r\n        id: \"123\", \r\n        english: newWordEng,\r\n        transcription: \"transcription\", \r\n        russian: newWordRus, \r\n        tags: \"\",\r\n        tags_json: \"[]\"\r\n      };\r\n      await POST.postWord(newWordData);\r\n      setNewWordEng('');\r\n      setNewWordRus('');\r\n      wordStore.toggleFlag();\r\n}\r\nreturn ( //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\r\n    <DataMobX.observerComponent>\r\n    <div>\r\n    \r\n    <div className={style.table}>\r\n    <div className={style.row_input}>\r\n    <input\r\ntype=\"text\"\r\nvalue={newWordEng}\r\nonChange={(e) => setNewWordEng(e.target.value)} \r\nclassName = {style.input}\r\nplaceholder=\"English\"\r\n/>\r\n<input\r\ntype=\"text\"\r\nvalue={newWordRus}\r\nonChange={(e) => setNewWordRus(e.target.value)} \r\nclassName = {style.input} \r\nplaceholder=\"Russian\"\r\n/>\r\n                <div className={style.col}>\r\n               <button disabled= {newWordEng.length === 0 || newWordRus.length === 0}  onClick={addWordToServer} ><FontAwesomeIcon icon={faCircleCheck} /></button> \r\n            </div>  \r\n            </div>  \r\n            </div>\r\n\r\n\r\n\r\n\r\n   \r\n    <div className={style.table}>\r\n    <div className={style.row}>\r\n    <div className={style.col}>English</div>\r\n    <div className={style.col}>Transcription</div>\r\n    <div className={style.col}>Russian</div>\r\n    <div className={style.col}>Edit</div>\r\n    </div>\r\n\r\n{wordStore.words.map ((item, index)=> (\r\n    <TableItem \r\n    key = {index}\r\n    {...item} flag={wordStore.flag} setFlag={wordStore.toggleFlag}/>\r\n    ))}\r\n    \r\n    </div>\r\n    \r\n    </div>\r\n    </DataMobX.observerComponent>\r\n    \r\n)})\r\n\r\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}