{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport TableItem from \"../../components/TableItem/TableItem\";\nimport POST from \"../../services/POST\";\nimport { MyContext } from \"../../context/MyContext\";\nimport { useContext, useState } from \"react\";\nimport style from './table.module.scss'; //импортируем компонент TableItem, массив с информацией о карточках, стили\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  //создаем компонент Table\n  const {\n    words,\n    flag,\n    setFlag\n  } = useContext(MyContext);\n  const [newWordEng, setNewWordEng] = useState('');\n  const [newWordRus, setNewWordRus] = useState('');\n  async function addWordToServer() {\n    if (newWordEng.trim() === '' || newWordRus.trim() === '') {\n      return;\n    }\n    const newWordData = {\n      id: \"123\",\n      english: newWordEng,\n      transcription: \"transcription\",\n      russian: newWordRus,\n      tags: \"\",\n      tags_json: \"[]\"\n    };\n    await POST.postWord(newWordData);\n    setNewWordEng('');\n    setNewWordRus('');\n    setFlag(!flag);\n  }\n  return (\n    /*#__PURE__*/\n    //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.row,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newWordEng,\n          onChange: e => setNewWordEng(e.target.value),\n          className: style.input,\n          placeholder: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newWordRus,\n          onChange: e => setNewWordRus(e.target.value),\n          className: style.input,\n          placeholder: \"Russian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col_buttons,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: newWordEng.length === 0 || newWordRus.length === 0,\n              onClick: addWordToServer,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 119\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.table,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.row,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Russian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), words.map((item, index) => /*#__PURE__*/_jsxDEV(TableItem, {\n          ...item,\n          flag: flag,\n          setFlag: setFlag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Table, \"ZePjQGxdqxpOie+m8FuqQYcbSus=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["TableItem","POST","MyContext","useContext","useState","style","FontAwesomeIcon","faCircleCheck","jsxDEV","_jsxDEV","Table","_s","words","flag","setFlag","newWordEng","setNewWordEng","newWordRus","setNewWordRus","addWordToServer","trim","newWordData","id","english","transcription","russian","tags","tags_json","postWord","children","className","row","type","value","onChange","e","target","input","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","col","col_buttons","disabled","length","onClick","icon","table","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Table/Table.jsx"],"sourcesContent":["import TableItem from \"../../components/TableItem/TableItem\"\r\nimport POST from \"../../services/POST\";\r\nimport { MyContext } from \"../../context/MyContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport style from './table.module.scss' //импортируем компонент TableItem, массив с информацией о карточках, стили\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCircleCheck} from '@fortawesome/free-solid-svg-icons'; \r\n\r\n\r\n\r\nfunction Table(){ //создаем компонент Table\r\n    const {words, flag, setFlag} = useContext(MyContext)\r\n    const [newWordEng, setNewWordEng] = useState('')\r\n    const [newWordRus, setNewWordRus] = useState('')\r\n    \r\n    async function addWordToServer() {\r\n        if (newWordEng.trim() === '' || newWordRus.trim() === '') {\r\n            return;\r\n          }\r\n          const newWordData = {\r\n            id: \"123\", \r\n            english: newWordEng,\r\n            transcription: \"transcription\", \r\n            russian: newWordRus, \r\n            tags: \"\",\r\n            tags_json: \"[]\"\r\n          };\r\n          await POST.postWord(newWordData);\r\n          setNewWordEng('');\r\n          setNewWordRus('');\r\n          setFlag(!flag);\r\n    }\r\n    return ( //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\r\n        <div>\r\n        \r\n         <div className={style.row}>\r\n                    <input\r\n  type=\"text\"\r\n  value={newWordEng}\r\n  onChange={(e) => setNewWordEng(e.target.value)} \r\n  className = {style.input}\r\n  placeholder=\"English\"\r\n/>\r\n<input\r\n  type=\"text\"\r\n  value={newWordRus}\r\n  onChange={(e) => setNewWordRus(e.target.value)} \r\n  className = {style.input}\r\n  placeholder=\"Russian\"\r\n/>\r\n                    <div className={style.col}>\r\n                    <div className={style.col_buttons}>\r\n                   <button disabled= {newWordEng.length === 0 || newWordRus.length === 0}  onClick={addWordToServer} ><FontAwesomeIcon icon={faCircleCheck} /></button>\r\n                </div>  \r\n                </div>  \r\n                </div>  \r\n\r\n\r\n\r\n\r\n\r\n       \r\n        <div className={style.table}>\r\n        <div className={style.row}>\r\n        <div className={style.col}>English</div>\r\n        <div className={style.col}>Transcription</div>\r\n        <div className={style.col}>Russian</div>\r\n        <div className={style.col}>Edit</div>\r\n        </div>\r\n\r\n        {words.map ((item, index)=> (\r\n        <TableItem \r\n        key = {index}\r\n        {...item} flag={flag} setFlag={setFlag}/>))}</div>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}