{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Slider\\\\Slider.jsx\",\n  _s = $RefreshSig$();\nimport DataMobX from \"../../stores/WordsStore\";\nimport { observer } from \"mobx-react\";\nimport { useState } from 'react';\nimport Card from \"../../components/Card/Card\";\nimport style from \"./slider.module.scss\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleLeft, faCircleRight } from '@fortawesome/free-solid-svg-icons'; //импортируем компонент Card, массив с данными для карточек, стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = _s(observer(_c = _s(() => {\n  _s();\n  const [translated, setTranslated] = useState(true); //создаем состояние для кнопки перевода\n  const [count, setCount] = useState(0); //получаем индекс объекта массива, чтобы получить нужный нам объект, изначальный индекс 0\n  const [cardCount, setCardCount] = useState(0); //задаем состояние для подсчета изученных карточек\n  const wordStore = DataMobX.wordStore;\n  const object = wordStore.words[count]; //создаем переменную для объекта массива\n\n  function handleClickCount() {\n    //создаем функцию для подсчета изученных карточек\n    setCardCount(cardCount + 1);\n  }\n  function showTranslation() {\n    //создаем функцию, которая сработает при нажатии на кнопку перевода\n    setTranslated(false); //изменить translated на false\n    handleClickCount();\n  }\n  function handleClickPrev() {\n    let copyCount = count;\n    if (copyCount === 0) {\n      setCount(wordStore.words.length - 1);\n    } else {\n      setCount(copyCount - 1);\n    }\n    setTranslated(true);\n  }\n  function handleClickNext() {\n    let copyCount = count;\n    if (copyCount === wordStore.words.length - 1) {\n      setCount(0);\n    } else {\n      setCount(copyCount + 1);\n    }\n    setTranslated(true);\n  }\n  if (!words) {\n    // если массив не был передан, то высвечивается сообщение о загрузке\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.slider,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.button_prev,\n        onClick: handleClickPrev,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        english: object.english,\n        transcription: object.transcription,\n        russian: object.russian,\n        index: object.index,\n        translated: translated,\n        showTranslation: showTranslation\n      }, object.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.button_next,\n        onClick: handleClickNext,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.text,\n      children: [\"Cards studied: \", cardCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}, \"msyVxYM2iCz6UFD3NVOqZsUHZ0E=\")), \"msyVxYM2iCz6UFD3NVOqZsUHZ0E=\"); //создаем компонент Slider\n_c2 = Slider;\nexport default Slider;\nvar _c, _c2;\n$RefreshReg$(_c, \"Slider$observer\");\n$RefreshReg$(_c2, \"Slider\");","map":{"version":3,"names":["DataMobX","observer","useState","Card","style","FontAwesomeIcon","faCircleLeft","faCircleRight","jsxDEV","_jsxDEV","Slider","_s","_c","translated","setTranslated","count","setCount","cardCount","setCardCount","wordStore","object","words","handleClickCount","showTranslation","handleClickPrev","copyCount","length","handleClickNext","children","fileName","_jsxFileName","lineNumber","columnNumber","className","slider","button_prev","onClick","icon","english","transcription","russian","index","button_next","text","_c2","$RefreshReg$"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Slider/Slider.jsx"],"sourcesContent":["import DataMobX from \"../../stores/WordsStore\";\r\nimport {observer} from \"mobx-react\";\r\nimport { useState } from 'react'\r\nimport Card from \"../../components/Card/Card\"\r\nimport style from \"./slider.module.scss\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleLeft,faCircleRight } from '@fortawesome/free-solid-svg-icons';  //импортируем компонент Card, массив с данными для карточек, стили\r\n\r\n\r\nconst Slider = observer(()=>{\r\nconst [translated, setTranslated] = useState (true); //создаем состояние для кнопки перевода\r\nconst [count, setCount] = useState (0) //получаем индекс объекта массива, чтобы получить нужный нам объект, изначальный индекс 0\r\nconst [cardCount, setCardCount] = useState (0) //задаем состояние для подсчета изученных карточек\r\nconst wordStore = DataMobX.wordStore;\r\n\r\n\r\nconst object = wordStore.words[count] //создаем переменную для объекта массива\r\n\r\n\r\nfunction handleClickCount (){ //создаем функцию для подсчета изученных карточек\r\n    setCardCount(cardCount + 1);\r\n}  \r\n\r\nfunction showTranslation () { //создаем функцию, которая сработает при нажатии на кнопку перевода\r\n    setTranslated(false); //изменить translated на false\r\n    handleClickCount ();  \r\n}\r\n\r\n\r\n\r\nfunction handleClickPrev() {\r\n    let copyCount = count;\r\n    if (copyCount === 0) {\r\n      setCount(wordStore.words.length - 1);\r\n    } else {\r\n      setCount(copyCount - 1);\r\n    }\r\n    setTranslated(true);\r\n  }\r\n  \r\n  function handleClickNext() {\r\n    let copyCount = count;\r\n    if (copyCount === wordStore.words.length - 1) {\r\n      setCount(0);\r\n    } else {\r\n      setCount(copyCount + 1);\r\n    }\r\n    setTranslated(true);\r\n  }\r\n\r\n\r\nif (!words){ // если массив не был передан, то высвечивается сообщение о загрузке\r\nreturn <h1>loading</h1>\r\n}\r\n\r\n\r\nreturn ( \r\n    <div>\r\n    <div className={style.slider}>\r\n     <button className={style.button_prev} onClick={handleClickPrev}><FontAwesomeIcon icon={faCircleLeft} /></button> \r\n    <Card \r\n    english = {object.english}\r\n    transcription = {object.transcription}\r\n    russian = {object.russian}\r\n    index = {object.index}\r\n    key = {object.index}\r\n    translated = {translated}\r\n    showTranslation = {showTranslation}\r\n    \r\n    />\r\n<button className={style.button_next} onClick={handleClickNext}><FontAwesomeIcon icon={faCircleRight} /></button>\r\n\r\n   </div>\r\n   <div className={style.text}>Cards studied: {cardCount}</div>\r\n   </div>\r\n   \r\n    \r\n)\r\n}) //создаем компонент Slider\r\n    \r\n    \r\n\r\nexport default Slider;\r\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,yBAAyB;AAC9C,SAAQC,QAAQ,QAAO,YAAY;AACnC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,KAAK,MAAM,sBAAsB;AACxC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,YAAY,EAACC,aAAa,QAAQ,mCAAmC,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjF,MAAMC,MAAM,GAAAC,EAAA,CAAGV,QAAQ,CAAAW,EAAA,GAAAD,EAAA,CAAC,MAAI;EAAAA,EAAA;EAC5B,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAE,IAAI,CAAC,CAAC,CAAC;EACrD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAE,CAAC,CAAC,EAAC;EACvC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAE,CAAC,CAAC,EAAC;EAC/C,MAAMiB,SAAS,GAAGnB,QAAQ,CAACmB,SAAS;EAGpC,MAAMC,MAAM,GAAGD,SAAS,CAACE,KAAK,CAACN,KAAK,CAAC,EAAC;;EAGtC,SAASO,gBAAgBA,CAAA,EAAG;IAAE;IAC1BJ,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;EAC/B;EAEA,SAASM,eAAeA,CAAA,EAAI;IAAE;IAC1BT,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IACtBQ,gBAAgB,CAAE,CAAC;EACvB;EAIA,SAASE,eAAeA,CAAA,EAAG;IACvB,IAAIC,SAAS,GAAGV,KAAK;IACrB,IAAIU,SAAS,KAAK,CAAC,EAAE;MACnBT,QAAQ,CAACG,SAAS,CAACE,KAAK,CAACK,MAAM,GAAG,CAAC,CAAC;IACtC,CAAC,MAAM;MACLV,QAAQ,CAACS,SAAS,GAAG,CAAC,CAAC;IACzB;IACAX,aAAa,CAAC,IAAI,CAAC;EACrB;EAEA,SAASa,eAAeA,CAAA,EAAG;IACzB,IAAIF,SAAS,GAAGV,KAAK;IACrB,IAAIU,SAAS,KAAKN,SAAS,CAACE,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;MAC5CV,QAAQ,CAAC,CAAC,CAAC;IACb,CAAC,MAAM;MACLA,QAAQ,CAACS,SAAS,GAAG,CAAC,CAAC;IACzB;IACAX,aAAa,CAAC,IAAI,CAAC;EACrB;EAGF,IAAI,CAACO,KAAK,EAAC;IAAE;IACb,oBAAOZ,OAAA;MAAAmB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAGA,oBACIvB,OAAA;IAAAmB,QAAA,gBACAnB,OAAA;MAAKwB,SAAS,EAAE7B,KAAK,CAAC8B,MAAO;MAAAN,QAAA,gBAC5BnB,OAAA;QAAQwB,SAAS,EAAE7B,KAAK,CAAC+B,WAAY;QAACC,OAAO,EAAEZ,eAAgB;QAAAI,QAAA,eAACnB,OAAA,CAACJ,eAAe;UAACgC,IAAI,EAAE/B;QAAa;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjHvB,OAAA,CAACN,IAAI;QACLmC,OAAO,EAAIlB,MAAM,CAACkB,OAAQ;QAC1BC,aAAa,EAAInB,MAAM,CAACmB,aAAc;QACtCC,OAAO,EAAIpB,MAAM,CAACoB,OAAQ;QAC1BC,KAAK,EAAIrB,MAAM,CAACqB,KAAM;QAEtB5B,UAAU,EAAIA,UAAW;QACzBU,eAAe,EAAIA;MAAgB,GAF5BH,MAAM,CAACqB,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CAAC,eACNvB,OAAA;QAAQwB,SAAS,EAAE7B,KAAK,CAACsC,WAAY;QAACN,OAAO,EAAET,eAAgB;QAAAC,QAAA,eAACnB,OAAA,CAACJ,eAAe;UAACgC,IAAI,EAAE9B;QAAc;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzG,CAAC,eACNvB,OAAA;MAAKwB,SAAS,EAAE7B,KAAK,CAACuC,IAAK;MAAAf,QAAA,GAAC,iBAAe,EAACX,SAAS;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAIT,CAAC,kCAAC,mCAAC;AAAAY,GAAA,GArEGlC,MAAM;AAyEZ,eAAeA,MAAM;AAAC,IAAAE,EAAA,EAAAgC,GAAA;AAAAC,YAAA,CAAAjC,EAAA;AAAAiC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}