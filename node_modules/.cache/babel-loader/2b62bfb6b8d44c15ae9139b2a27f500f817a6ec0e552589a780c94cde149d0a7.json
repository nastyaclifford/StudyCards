{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport style from './card.module.scss'; //подключаем стили, состояние useState\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(props) {\n  _s();\n  //создаем компонент Card\n  const {\n    english,\n    transcription,\n    russian,\n    translated,\n    showTranslation\n  } = props; //обращаемся к пропсам, которые находятся в компоненте Slider\n\n  const buttonRef = useRef();\n  useEffect(() => {\n    buttonRef.current.focus();\n  }, [english]);\n  return (\n    /*#__PURE__*/\n    //возвращаем разметку для карточки, вставляем значения из пропсов, добавляем обработчик события onclick кнопке и условия показа перевода\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.col,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.row,\n          children: english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.row,\n          children: transcription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.row,\n          children: translated === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: showTranslation,\n            ref: buttonRef,\n            className: style.button_show,\n            children: \"Show translation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 48\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.row,\n            children: russian\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 156\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Card, \"PyOyHPIzTUj62NAf35stQiG1Ma8=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useEffect","useRef","style","jsxDEV","_jsxDEV","Card","props","_s","english","transcription","russian","translated","showTranslation","buttonRef","current","focus","children","className","col","row","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","button_show","_c","$RefreshReg$"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/components/Card/Card.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\nimport style from './card.module.scss'; //подключаем стили, состояние useState\r\n\r\n\r\nexport default function Card(props) { //создаем компонент Card\r\n    const { english, transcription, russian, translated, showTranslation} = props; //обращаемся к пропсам, которые находятся в компоненте Slider\r\n    \r\n    const buttonRef = useRef();\r\n\r\n    useEffect (()=>{\r\n        buttonRef.current.focus()\r\n    }, [english])\r\n   \r\n    return( //возвращаем разметку для карточки, вставляем значения из пропсов, добавляем обработчик события onclick кнопке и условия показа перевода\r\n        <div>\r\n                <div className={style.col}>\r\n                    <div className={style.row}>{english}</div>\r\n                    <div className={style.row}>{transcription}</div>\r\n                    <div className={style.row}>\r\n                        {translated === true ? <button onClick={showTranslation} ref={buttonRef} className={style.button_show}>Show translation</button> : <div className={style.row}>{russian}</div>} \r\n                    </div>\r\n                </div>  \r\n                </div>\r\n               \r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGxC,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAAE;EAClC,MAAM;IAAEC,OAAO;IAAEC,aAAa;IAAEC,OAAO;IAAEC,UAAU;IAAEC;EAAe,CAAC,GAAGN,KAAK,CAAC,CAAC;;EAE/E,MAAMO,SAAS,GAAGZ,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAE,MAAI;IACXa,SAAS,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb;IAAA;IAAQ;IACJJ,OAAA;MAAAY,QAAA,eACQZ,OAAA;QAAKa,SAAS,EAAEf,KAAK,CAACgB,GAAI;QAAAF,QAAA,gBACtBZ,OAAA;UAAKa,SAAS,EAAEf,KAAK,CAACiB,GAAI;UAAAH,QAAA,EAAER;QAAO;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1CnB,OAAA;UAAKa,SAAS,EAAEf,KAAK,CAACiB,GAAI;UAAAH,QAAA,EAAEP;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChDnB,OAAA;UAAKa,SAAS,EAAEf,KAAK,CAACiB,GAAI;UAAAH,QAAA,EACrBL,UAAU,KAAK,IAAI,gBAAGP,OAAA;YAAQoB,OAAO,EAAEZ,eAAgB;YAACa,GAAG,EAAEZ,SAAU;YAACI,SAAS,EAAEf,KAAK,CAACwB,WAAY;YAAAV,QAAA,EAAC;UAAgB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAAGnB,OAAA;YAAKa,SAAS,EAAEf,KAAK,CAACiB,GAAI;YAAAH,QAAA,EAAEN;UAAO;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5K,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;AAGtB;AAAChB,EAAA,CArBuBF,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}