{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Slider\\\\Slider.jsx\",\n  _s = $RefreshSig$();\nimport { observer, inject } from \"mobx-react\";\nimport { useState } from 'react';\nimport Card from \"../../components/Card/Card\";\nimport style from \"./slider.module.scss\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleLeft, faCircleRight } from '@fortawesome/free-solid-svg-icons'; //импортируем компонент Card, массив с данными для карточек, стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = _s(inject('wordStore')(_s(observer(_s(({\n  wordStore\n}) => {\n  _s();\n  const [translated, setTranslated] = useState(true); //создаем состояние для кнопки перевода\n  const [count, setCount] = useState(0); //получаем индекс объекта массива, чтобы получить нужный нам объект, изначальный индекс 0\n  const [cardCount, setCardCount] = useState(0); //задаем состояние для подсчета изученных карточек\n\n  if (!wordStore.words && wordStore.words.length === 0) {}\n  ; //создаем переменную для объекта массива\n\n  if (!object) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this);\n  }\n  function handleClickCount() {\n    //создаем функцию для подсчета изученных карточек\n    setCardCount(cardCount + 1);\n  }\n  function showTranslation() {\n    //создаем функцию, которая сработает при нажатии на кнопку перевода\n    setTranslated(false); //изменить translated на false\n    handleClickCount();\n  }\n  function handleClickPrev() {\n    let copyCount = count;\n    if (copyCount === 0) {\n      setCount(wordStore.words.length - 1);\n    } else {\n      setCount(copyCount - 1);\n    }\n    setTranslated(true);\n  }\n  function handleClickNext() {\n    let copyCount = count;\n    if (copyCount === wordStore.words.length - 1) {\n      setCount(0);\n    } else {\n      setCount(copyCount + 1);\n    }\n    setTranslated(true);\n  }\n  if (!wordStore.words) {\n    // если массив не был передан, то высвечивается сообщение о загрузке\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.slider,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.button_prev,\n        onClick: handleClickPrev,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        english: object.english,\n        transcription: object.transcription,\n        russian: object.russian,\n        index: object.index,\n        translated: translated,\n        showTranslation: showTranslation\n      }, object.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.button_next,\n        onClick: handleClickNext,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.text,\n      children: [\"Cards studied: \", cardCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}, \"msyVxYM2iCz6UFD3NVOqZsUHZ0E=\")), \"msyVxYM2iCz6UFD3NVOqZsUHZ0E=\")), \"msyVxYM2iCz6UFD3NVOqZsUHZ0E=\"); //создаем компонент Slider\n\nexport default Slider;","map":{"version":3,"names":["observer","inject","useState","Card","style","FontAwesomeIcon","faCircleLeft","faCircleRight","jsxDEV","_jsxDEV","Slider","_s","wordStore","translated","setTranslated","count","setCount","cardCount","setCardCount","words","length","object","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClickCount","showTranslation","handleClickPrev","copyCount","handleClickNext","className","slider","button_prev","onClick","icon","english","transcription","russian","index","button_next","text"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Slider/Slider.jsx"],"sourcesContent":["import {observer, inject} from \"mobx-react\";\r\nimport { useState } from 'react'\r\nimport Card from \"../../components/Card/Card\"\r\nimport style from \"./slider.module.scss\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleLeft,faCircleRight } from '@fortawesome/free-solid-svg-icons';  //импортируем компонент Card, массив с данными для карточек, стили\r\n\r\n\r\nconst Slider = inject('wordStore') (observer(({wordStore})=>{\r\nconst [translated, setTranslated] = useState (true); //создаем состояние для кнопки перевода\r\nconst [count, setCount] = useState (0) //получаем индекс объекта массива, чтобы получить нужный нам объект, изначальный индекс 0\r\nconst [cardCount, setCardCount] = useState (0) //задаем состояние для подсчета изученных карточек\r\n\r\nif (!wordStore.words && wordStore.words.length === 0) {\r\n  \r\n}; //создаем переменную для объекта массива\r\n\r\nif (!object) {\r\n  return <h1>loading</h1>;\r\n}\r\n\r\nfunction handleClickCount (){ //создаем функцию для подсчета изученных карточек\r\n    setCardCount(cardCount + 1);\r\n}  \r\n\r\nfunction showTranslation () { //создаем функцию, которая сработает при нажатии на кнопку перевода\r\n    setTranslated(false); //изменить translated на false\r\n    handleClickCount ();  \r\n}\r\n\r\n\r\n\r\nfunction handleClickPrev() {\r\n    let copyCount = count;\r\n    if (copyCount === 0) {\r\n      setCount(wordStore.words.length - 1);\r\n    } else {\r\n      setCount(copyCount - 1);\r\n    }\r\n    setTranslated(true);\r\n  }\r\n  \r\n  function handleClickNext() {\r\n    let copyCount = count;\r\n    if (copyCount === wordStore.words.length - 1) {\r\n      setCount(0);\r\n    } else {\r\n      setCount(copyCount + 1);\r\n    }\r\n    setTranslated(true);\r\n  }\r\n\r\n\r\nif (!wordStore.words){ // если массив не был передан, то высвечивается сообщение о загрузке\r\nreturn <h1>loading</h1>\r\n}\r\n\r\n\r\nreturn ( \r\n    <div>\r\n    <div className={style.slider}>\r\n     <button className={style.button_prev} onClick={handleClickPrev}><FontAwesomeIcon icon={faCircleLeft} /></button> \r\n    <Card \r\n    english = {object.english}\r\n    transcription = {object.transcription}\r\n    russian = {object.russian}\r\n    index = {object.index}\r\n    key = {object.index}\r\n    translated = {translated}\r\n    showTranslation = {showTranslation}\r\n    \r\n    />\r\n<button className={style.button_next} onClick={handleClickNext}><FontAwesomeIcon icon={faCircleRight} /></button>\r\n\r\n   </div>\r\n   <div className={style.text}>Cards studied: {cardCount}</div>\r\n   </div>\r\n   \r\n    \r\n)\r\n})) //создаем компонент Slider\r\n    \r\n    \r\n\r\nexport default Slider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}