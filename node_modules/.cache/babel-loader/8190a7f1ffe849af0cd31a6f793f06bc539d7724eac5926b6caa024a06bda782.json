{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport TableItem from \"../../components/TableItem/TableItem\";\nimport words from \"../../data/words.json\";\nimport style from './table.module.scss'; //импортируем компонент TableItem, массив с информацией о карточках, стили\n\nimport GET from '../Services/GET';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  //создаем компонент Table\n  const [posts, setPosts] = useState(false);\n  async function getPostServer() {\n    const postServer = await GET.getPosts();\n    setPosts(postServer);\n  }\n  if (!posts) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 20\n  }, this);\n  return (\n    /*#__PURE__*/\n    //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.table,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.row,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Russian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), words.map((item, index) => /*#__PURE__*/_jsxDEV(TableItem, {\n          ...item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Table, \"chL+U77KVk7HiwT/QHlLRCdg06w=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["TableItem","words","style","GET","useState","useEffect","jsxDEV","_jsxDEV","Table","_s","posts","setPosts","getPostServer","postServer","getPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","className","table","row","col","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Table/Table.jsx"],"sourcesContent":["import TableItem from \"../../components/TableItem/TableItem\"\r\nimport words from \"../../data/words.json\"\r\nimport style from './table.module.scss' //импортируем компонент TableItem, массив с информацией о карточках, стили\r\n\r\nimport GET from '../Services/GET';\r\nimport {useState, useEffect} from 'react'\r\n\r\n\r\nfunction Table(){ //создаем компонент Table\r\n const [posts, setPosts] = useState (false)\r\n\r\n async function getPostServer (){\r\n    const postServer = await GET.getPosts()\r\n    setPosts (postServer)\r\n }\r\n if (!posts)return <h1>Loading...</h1>\r\n    return ( //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\r\n        <div>\r\n        <div className={style.table}>\r\n        <div className={style.row}>\r\n        <div className={style.col}>English</div>\r\n        <div className={style.col}>Transcription</div>\r\n        <div className={style.col}>Russian</div>\r\n        <div className={style.col}>Edit</div>\r\n        </div>\r\n        {words.map ((item, index)=> (\r\n        <TableItem \r\n        key = {index}\r\n        {...item}/>))}</div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Table;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,KAAK,MAAM,qBAAqB,EAAC;;AAExC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzC,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAAE;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAE,KAAK,CAAC;EAE1C,eAAeQ,aAAaA,CAAA,EAAG;IAC5B,MAAMC,UAAU,GAAG,MAAMV,GAAG,CAACW,QAAQ,CAAC,CAAC;IACvCH,QAAQ,CAAEE,UAAU,CAAC;EACxB;EACA,IAAI,CAACH,KAAK,EAAC,oBAAOH,OAAA;IAAAQ,QAAA,EAAI;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAClC;IAAA;IAAS;IACLZ,OAAA;MAAAQ,QAAA,eACAR,OAAA;QAAKa,SAAS,EAAElB,KAAK,CAACmB,KAAM;QAAAN,QAAA,gBAC5BR,OAAA;UAAKa,SAAS,EAAElB,KAAK,CAACoB,GAAI;UAAAP,QAAA,gBAC1BR,OAAA;YAAKa,SAAS,EAAElB,KAAK,CAACqB,GAAI;YAAAR,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxCZ,OAAA;YAAKa,SAAS,EAAElB,KAAK,CAACqB,GAAI;YAAAR,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9CZ,OAAA;YAAKa,SAAS,EAAElB,KAAK,CAACqB,GAAI;YAAAR,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxCZ,OAAA;YAAKa,SAAS,EAAElB,KAAK,CAACqB,GAAI;YAAAR,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,EACLlB,KAAK,CAACuB,GAAG,CAAE,CAACC,IAAI,EAAEC,KAAK,kBACxBnB,OAAA,CAACP,SAAS;UAAA,GAENyB;QAAI,GADDC,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;AAGd;AAACV,EAAA,CAxBQD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AA0Bd,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}