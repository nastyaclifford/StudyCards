{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport { observer, inject } from 'mobx-react';\nimport React, { useState, useEffect } from \"react\";\nimport TableItem from \"../../components/TableItem/TableItem\";\nimport POST from \"../../services/POST\";\nimport DEL from \"../../services/DEL\";\nimport PUT from \"../../services/PUT\";\nimport style from './table.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = _s(inject('wordStore')(_s(observer(_s(({\n  wordStore\n}) => {\n  _s();\n  const [newWordEng, setNewWordEng] = useState('');\n  const [newWordRus, setNewWordRus] = useState('');\n  const [itemsToRender, setItemsToRender] = useState([]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      wordStore.getWordServer();\n      setItemsToRender(wordStore.words.map((item, index) => /*#__PURE__*/_jsxDEV(TableItem, {\n        ...item,\n        flag: wordStore.flag,\n        setFlag: wordStore.toggleFlag,\n        delWord: () => deleteWord(item.id),\n        updWord: () => updateWord(item.id)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)));\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [wordStore.words, wordStore.flag]);\n  async function deleteWord(id) {\n    await DEL.delWord(id);\n    console.log(\"delete\");\n  }\n  async function updateWord(id, updatedData) {\n    await PUT.putWord(id, updatedData);\n    wordStore.updateWord(id, updatedData);\n    console.log(\"updated\", wordStore);\n  }\n  async function addWordToServer() {\n    if (newWordEng.trim() === '' || newWordRus.trim() === '') {\n      return;\n    }\n    const newWordData = {\n      id: \"123\",\n      english: newWordEng,\n      transcription: \"transcription\",\n      russian: newWordRus,\n      tags: \"\",\n      tags_json: \"[]\"\n    };\n    await POST.postWord(newWordData);\n    setNewWordEng('');\n    setNewWordRus('');\n    wordStore.toggleFlag();\n    wordStore.getWordServer();\n    console.log(2222);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.table,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.row_input,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newWordEng,\n          onChange: e => setNewWordEng(e.target.value),\n          className: style.input,\n          placeholder: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newWordRus,\n          onChange: e => setNewWordRus(e.target.value),\n          className: style.input,\n          placeholder: \"Russian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: newWordEng.length === 0 || newWordRus.length === 0,\n            onClick: addWordToServer,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 109\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.table,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.row,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: \"Transcription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: \"Russian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), itemsToRender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}, \"7cCauUUfNFCHtyz13EAbQdPP2Is=\")), \"7cCauUUfNFCHtyz13EAbQdPP2Is=\")), \"7cCauUUfNFCHtyz13EAbQdPP2Is=\");\nexport default Table;","map":{"version":3,"names":["observer","inject","React","useState","useEffect","TableItem","POST","DEL","PUT","style","FontAwesomeIcon","faCircleCheck","jsxDEV","_jsxDEV","Table","_s","wordStore","newWordEng","setNewWordEng","newWordRus","setNewWordRus","itemsToRender","setItemsToRender","timer","setTimeout","getWordServer","words","map","item","index","flag","setFlag","toggleFlag","delWord","deleteWord","id","updWord","updateWord","fileName","_jsxFileName","lineNumber","columnNumber","clearTimeout","console","log","updatedData","putWord","addWordToServer","trim","newWordData","english","transcription","russian","tags","tags_json","postWord","children","className","table","row_input","type","value","onChange","e","target","input","placeholder","col","disabled","length","onClick","icon","row"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Table/Table.jsx"],"sourcesContent":["import { observer, inject } from 'mobx-react';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TableItem from \"../../components/TableItem/TableItem\";\r\nimport POST from \"../../services/POST\";\r\nimport DEL from \"../../services/DEL\";\r\nimport PUT from \"../../services/PUT\";\r\nimport style from './table.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\n  const Table = inject('wordStore')(observer(({ wordStore }) => {\r\n  const [newWordEng, setNewWordEng] = useState('');\r\n  const [newWordRus, setNewWordRus] = useState('');\r\n  const [itemsToRender, setItemsToRender] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      wordStore.getWordServer();\r\n      setItemsToRender(wordStore.words.map((item, index) => (\r\n        <TableItem\r\n          key={index}\r\n          {...item} flag={wordStore.flag} setFlag={wordStore.toggleFlag}\r\n          delWord={() => deleteWord(item.id)} updWord={() => updateWord(item.id) } />\r\n      )));\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [wordStore.words, wordStore.flag]);\r\n\r\n\r\n  async function deleteWord(id) {\r\n    await DEL.delWord(id);\r\n    console.log(\"delete\")\r\n  }\r\n\r\nasync function updateWord (id,updatedData) { \r\n    await PUT.putWord(id, updatedData); \r\n    wordStore.updateWord(id, updatedData);\r\n    console.log(\"updated\", wordStore)\r\n} \r\n\r\n  async function addWordToServer() {\r\n    if (newWordEng.trim() === '' || newWordRus.trim() === '') {\r\n      return;\r\n    }\r\n    const newWordData = {\r\n      id: \"123\",\r\n      english: newWordEng,\r\n      transcription: \"transcription\",\r\n      russian: newWordRus,\r\n      tags: \"\",\r\n      tags_json: \"[]\"\r\n    };\r\n    await POST.postWord(newWordData);\r\n    setNewWordEng('');\r\n    setNewWordRus('');\r\n    wordStore.toggleFlag();\r\n    wordStore.getWordServer();\r\n    console.log(2222);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.table}>\r\n        <div className={style.row_input}>\r\n          <input type=\"text\" value={newWordEng} onChange={(e) => setNewWordEng(e.target.value)} className={style.input} placeholder=\"English\" />\r\n          <input type=\"text\" value={newWordRus} onChange={(e) => setNewWordRus(e.target.value)} className={style.input} placeholder=\"Russian\" />\r\n          <div className={style.col}>\r\n            <button disabled={newWordEng.length === 0 || newWordRus.length === 0} onClick={addWordToServer}><FontAwesomeIcon icon={faCircleCheck} /></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={style.table}>\r\n        <div className={style.row}>\r\n          <div className={style.col}>English</div>\r\n          <div className={style.col}>Transcription</div>\r\n          <div className={style.col}>Russian</div>\r\n          <div className={style.col}>Edit</div>\r\n        </div>\r\n        {itemsToRender}\r\n      </div>\r\n    </div>\r\n  );\r\n}));\r\n\r\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}