{"ast":null,"code":"import{observer,inject}from'mobx-react';import React,{useState,useEffect}from\"react\";import TableItem from\"../../components/TableItem/TableItem\";import POST from\"../../services/POST\";import DEL from\"../../services/DEL\";import PUT from\"../../services/PUT\";import style from'./table.module.scss';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCircleCheck}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Table=inject('wordStore')(observer(_ref=>{let{wordStore}=_ref;const[newWordEng,setNewWordEng]=useState('');const[newWordRus,setNewWordRus]=useState('');const[itemsToRender,setItemsToRender]=useState([]);useEffect(()=>{const timer=setTimeout(()=>{wordStore.getWordServer();setItemsToRender(wordStore.words.map((item,index)=>/*#__PURE__*/_jsx(TableItem,{...item,flag:wordStore.flag,setFlag:wordStore.toggleFlag,delWord:()=>deleteWord(item.id),updWord:(id,updatedData)=>updateWord(id,updatedData)},index)));},1000);return()=>clearTimeout(timer);},[wordStore.words,wordStore.flag]);async function deleteWord(id){await DEL.delWord(id);console.log(\"delete\");}async function updateWord(id,updatedData){await PUT.putWord(id,updatedData);console.log(\"updated\",wordStore);}async function addWordToServer(){if(newWordEng.trim()===''||newWordRus.trim()===''){return;}const newWordData={id:\"123\",english:newWordEng,transcription:\"transcription\",russian:newWordRus,tags:\"\",tags_json:\"[]\"};await POST.postWord(newWordData);setNewWordEng('');setNewWordRus('');wordStore.toggleFlag();wordStore.getWordServer();console.log(2222);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:style.table,children:/*#__PURE__*/_jsxs(\"div\",{className:style.row_input,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newWordEng,onChange:e=>setNewWordEng(e.target.value),className:style.input,placeholder:\"English\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newWordRus,onChange:e=>setNewWordRus(e.target.value),className:style.input,placeholder:\"Russian\"}),/*#__PURE__*/_jsx(\"div\",{className:style.col,children:/*#__PURE__*/_jsx(\"button\",{disabled:newWordEng.length===0||newWordRus.length===0,onClick:addWordToServer,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCircleCheck})})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:style.table,children:[/*#__PURE__*/_jsxs(\"div\",{className:style.row,children:[/*#__PURE__*/_jsx(\"div\",{className:style.col,children:\"English\"}),/*#__PURE__*/_jsx(\"div\",{className:style.col,children:\"Transcription\"}),/*#__PURE__*/_jsx(\"div\",{className:style.col,children:\"Russian\"}),/*#__PURE__*/_jsx(\"div\",{className:style.col,children:\"Edit\"})]}),itemsToRender]})]});}));export default Table;","map":{"version":3,"names":["observer","inject","React","useState","useEffect","TableItem","POST","DEL","PUT","style","FontAwesomeIcon","faCircleCheck","jsx","_jsx","jsxs","_jsxs","Table","_ref","wordStore","newWordEng","setNewWordEng","newWordRus","setNewWordRus","itemsToRender","setItemsToRender","timer","setTimeout","getWordServer","words","map","item","index","flag","setFlag","toggleFlag","delWord","deleteWord","id","updWord","updatedData","updateWord","clearTimeout","console","log","putWord","addWordToServer","trim","newWordData","english","transcription","russian","tags","tags_json","postWord","children","className","table","row_input","type","value","onChange","e","target","input","placeholder","col","disabled","length","onClick","icon","row"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Table/Table.jsx"],"sourcesContent":["import { observer, inject } from 'mobx-react';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TableItem from \"../../components/TableItem/TableItem\";\r\nimport POST from \"../../services/POST\";\r\nimport DEL from \"../../services/DEL\";\r\nimport PUT from \"../../services/PUT\";\r\nimport style from './table.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\n  const Table = inject('wordStore')(observer(({ wordStore }) => {\r\n  const [newWordEng, setNewWordEng] = useState('');\r\n  const [newWordRus, setNewWordRus] = useState('');\r\n  const [itemsToRender, setItemsToRender] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      wordStore.getWordServer();\r\n      setItemsToRender(wordStore.words.map((item, index) => (\r\n        <TableItem\r\n          key={index}\r\n          {...item} flag={wordStore.flag} setFlag={wordStore.toggleFlag}\r\n          delWord={() => deleteWord(item.id)} updWord={(id, updatedData) => updateWord(id, updatedData)} />\r\n      )));\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [wordStore.words, wordStore.flag]);\r\n\r\n\r\n  async function deleteWord(id) {\r\n    await DEL.delWord(id);\r\n    console.log(\"delete\")\r\n  }\r\n\r\nasync function updateWord (id,updatedData) { \r\n    await PUT.putWord(id, updatedData); \r\n    console.log(\"updated\", wordStore)\r\n} \r\n\r\n  async function addWordToServer() {\r\n    if (newWordEng.trim() === '' || newWordRus.trim() === '') {\r\n      return;\r\n    }\r\n    const newWordData = {\r\n      id: \"123\",\r\n      english: newWordEng,\r\n      transcription: \"transcription\",\r\n      russian: newWordRus,\r\n      tags: \"\",\r\n      tags_json: \"[]\"\r\n    };\r\n    await POST.postWord(newWordData);\r\n    setNewWordEng('');\r\n    setNewWordRus('');\r\n    wordStore.toggleFlag();\r\n    wordStore.getWordServer();\r\n    console.log(2222);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.table}>\r\n        <div className={style.row_input}>\r\n          <input type=\"text\" value={newWordEng} onChange={(e) => setNewWordEng(e.target.value)} className={style.input} placeholder=\"English\" />\r\n          <input type=\"text\" value={newWordRus} onChange={(e) => setNewWordRus(e.target.value)} className={style.input} placeholder=\"Russian\" />\r\n          <div className={style.col}>\r\n            <button disabled={newWordEng.length === 0 || newWordRus.length === 0} onClick={addWordToServer}><FontAwesomeIcon icon={faCircleCheck} /></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={style.table}>\r\n        <div className={style.row}>\r\n          <div className={style.col}>English</div>\r\n          <div className={style.col}>Transcription</div>\r\n          <div className={style.col}>Russian</div>\r\n          <div className={style.col}>Edit</div>\r\n        </div>\r\n        {itemsToRender}\r\n      </div>\r\n    </div>\r\n  );\r\n}));\r\n\r\nexport default Table;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,MAAM,KAAQ,YAAY,CAC7C,MAAO,CAAAC,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,SAAS,KAAM,sCAAsC,CAC5D,MAAO,CAAAC,IAAI,KAAM,qBAAqB,CACtC,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CACpC,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CACpC,MAAO,CAAAC,KAAK,KAAM,qBAAqB,CACvC,OAASC,eAAe,KAAQ,gCAAgC,CAChE,OAASC,aAAa,KAAQ,mCAAmC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEhE,KAAM,CAAAC,KAAK,CAAGf,MAAM,CAAC,WAAW,CAAC,CAACD,QAAQ,CAACiB,IAAA,EAAmB,IAAlB,CAAEC,SAAU,CAAC,CAAAD,IAAA,CACzD,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACkB,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACoB,aAAa,CAAEC,gBAAgB,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAEtDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqB,KAAK,CAAGC,UAAU,CAAC,IAAM,CAC7BR,SAAS,CAACS,aAAa,CAAC,CAAC,CACzBH,gBAAgB,CAACN,SAAS,CAACU,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBAC/ClB,IAAA,CAACR,SAAS,KAEJyB,IAAI,CAAEE,IAAI,CAAEd,SAAS,CAACc,IAAK,CAACC,OAAO,CAAEf,SAAS,CAACgB,UAAW,CAC9DC,OAAO,CAAEA,CAAA,GAAMC,UAAU,CAACN,IAAI,CAACO,EAAE,CAAE,CAACC,OAAO,CAAEA,CAACD,EAAE,CAAEE,WAAW,GAAKC,UAAU,CAACH,EAAE,CAAEE,WAAW,CAAE,EAFzFR,KAE2F,CACnG,CAAC,CAAC,CACL,CAAC,CAAE,IAAI,CAAC,CACR,MAAO,IAAMU,YAAY,CAAChB,KAAK,CAAC,CAClC,CAAC,CAAE,CAACP,SAAS,CAACU,KAAK,CAAEV,SAAS,CAACc,IAAI,CAAC,CAAC,CAGrC,cAAe,CAAAI,UAAUA,CAACC,EAAE,CAAE,CAC5B,KAAM,CAAA9B,GAAG,CAAC4B,OAAO,CAACE,EAAE,CAAC,CACrBK,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CACvB,CAEF,cAAe,CAAAH,UAAUA,CAAEH,EAAE,CAACE,WAAW,CAAE,CACvC,KAAM,CAAA/B,GAAG,CAACoC,OAAO,CAACP,EAAE,CAAEE,WAAW,CAAC,CAClCG,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEzB,SAAS,CAAC,CACrC,CAEE,cAAe,CAAA2B,eAAeA,CAAA,CAAG,CAC/B,GAAI1B,UAAU,CAAC2B,IAAI,CAAC,CAAC,GAAK,EAAE,EAAIzB,UAAU,CAACyB,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACxD,OACF,CACA,KAAM,CAAAC,WAAW,CAAG,CAClBV,EAAE,CAAE,KAAK,CACTW,OAAO,CAAE7B,UAAU,CACnB8B,aAAa,CAAE,eAAe,CAC9BC,OAAO,CAAE7B,UAAU,CACnB8B,IAAI,CAAE,EAAE,CACRC,SAAS,CAAE,IACb,CAAC,CACD,KAAM,CAAA9C,IAAI,CAAC+C,QAAQ,CAACN,WAAW,CAAC,CAChC3B,aAAa,CAAC,EAAE,CAAC,CACjBE,aAAa,CAAC,EAAE,CAAC,CACjBJ,SAAS,CAACgB,UAAU,CAAC,CAAC,CACtBhB,SAAS,CAACS,aAAa,CAAC,CAAC,CACzBe,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC,CACnB,CAEA,mBACE5B,KAAA,QAAAuC,QAAA,eACEzC,IAAA,QAAK0C,SAAS,CAAE9C,KAAK,CAAC+C,KAAM,CAAAF,QAAA,cAC1BvC,KAAA,QAAKwC,SAAS,CAAE9C,KAAK,CAACgD,SAAU,CAAAH,QAAA,eAC9BzC,IAAA,UAAO6C,IAAI,CAAC,MAAM,CAACC,KAAK,CAAExC,UAAW,CAACyC,QAAQ,CAAGC,CAAC,EAAKzC,aAAa,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAACJ,SAAS,CAAE9C,KAAK,CAACsD,KAAM,CAACC,WAAW,CAAC,SAAS,CAAE,CAAC,cACtInD,IAAA,UAAO6C,IAAI,CAAC,MAAM,CAACC,KAAK,CAAEtC,UAAW,CAACuC,QAAQ,CAAGC,CAAC,EAAKvC,aAAa,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAACJ,SAAS,CAAE9C,KAAK,CAACsD,KAAM,CAACC,WAAW,CAAC,SAAS,CAAE,CAAC,cACtInD,IAAA,QAAK0C,SAAS,CAAE9C,KAAK,CAACwD,GAAI,CAAAX,QAAA,cACxBzC,IAAA,WAAQqD,QAAQ,CAAE/C,UAAU,CAACgD,MAAM,GAAK,CAAC,EAAI9C,UAAU,CAAC8C,MAAM,GAAK,CAAE,CAACC,OAAO,CAAEvB,eAAgB,CAAAS,QAAA,cAACzC,IAAA,CAACH,eAAe,EAAC2D,IAAI,CAAE1D,aAAc,CAAE,CAAC,CAAQ,CAAC,CAC9I,CAAC,EACH,CAAC,CACH,CAAC,cACNI,KAAA,QAAKwC,SAAS,CAAE9C,KAAK,CAAC+C,KAAM,CAAAF,QAAA,eAC1BvC,KAAA,QAAKwC,SAAS,CAAE9C,KAAK,CAAC6D,GAAI,CAAAhB,QAAA,eACxBzC,IAAA,QAAK0C,SAAS,CAAE9C,KAAK,CAACwD,GAAI,CAAAX,QAAA,CAAC,SAAO,CAAK,CAAC,cACxCzC,IAAA,QAAK0C,SAAS,CAAE9C,KAAK,CAACwD,GAAI,CAAAX,QAAA,CAAC,eAAa,CAAK,CAAC,cAC9CzC,IAAA,QAAK0C,SAAS,CAAE9C,KAAK,CAACwD,GAAI,CAAAX,QAAA,CAAC,SAAO,CAAK,CAAC,cACxCzC,IAAA,QAAK0C,SAAS,CAAE9C,KAAK,CAACwD,GAAI,CAAAX,QAAA,CAAC,MAAI,CAAK,CAAC,EAClC,CAAC,CACL/B,aAAa,EACX,CAAC,EACH,CAAC,CAEV,CAAC,CAAC,CAAC,CAEH,cAAe,CAAAP,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}