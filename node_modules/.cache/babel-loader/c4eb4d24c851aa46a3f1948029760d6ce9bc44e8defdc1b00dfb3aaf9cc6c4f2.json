{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{observer,inject}from'mobx-react';import React,{useState,useEffect}from\"react\";import TableItem from\"../../components/TableItem/TableItem\";import POST from\"../../services/POST\";import DEL from\"../../services/DEL\";import PUT from\"../../services/PUT\";import style from'./table.module.scss';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCircleCheck}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Table=inject('wordStore')(observer(function(_ref){var wordStore=_ref.wordStore;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newWordEng=_useState2[0],setNewWordEng=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newWordRus=_useState4[0],setNewWordRus=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),itemsToRender=_useState6[0],setItemsToRender=_useState6[1];useEffect(function(){var timer=setTimeout(function(){wordStore.getWordServer();setItemsToRender(wordStore.words.map(function(item,index){return/*#__PURE__*/_jsx(TableItem,_objectSpread(_objectSpread({},item),{},{flag:wordStore.flag,setFlag:wordStore.toggleFlag,delWord:function delWord(){return deleteWord(item.id);},updWord:function updWord(id,updatedData){return updateWord(id,updatedData);}}),index);}));},1000);return function(){return clearTimeout(timer);};},[wordStore.words,wordStore.flag]);function deleteWord(_x){return _deleteWord.apply(this,arguments);}function _deleteWord(){_deleteWord=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return DEL.delWord(id);case 2:console.log(\"delete\");case 3:case\"end\":return _context.stop();}},_callee);}));return _deleteWord.apply(this,arguments);}function updateWord(_x2,_x3){return _updateWord.apply(this,arguments);}function _updateWord(){_updateWord=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id,updatedData){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return PUT.putWord(id,updatedData);case 2:console.log(\"updated\",wordStore);case 3:case\"end\":return _context2.stop();}},_callee2);}));return _updateWord.apply(this,arguments);}function addWordToServer(){return _addWordToServer.apply(this,arguments);}function _addWordToServer(){_addWordToServer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var newWordData;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:if(!(newWordEng.trim()===''||newWordRus.trim()==='')){_context3.next=2;break;}return _context3.abrupt(\"return\");case 2:newWordData={id:\"123\",english:newWordEng,transcription:\"transcription\",russian:newWordRus,tags:\"\",tags_json:\"[]\"};_context3.next=5;return POST.postWord(newWordData);case 5:setNewWordEng('');setNewWordRus('');wordStore.toggleFlag();wordStore.getWordServer();console.log(2222);case 10:case\"end\":return _context3.stop();}},_callee3);}));return _addWordToServer.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:style.table,children:/*#__PURE__*/_jsxs(\"div\",{className:style.row_input,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newWordEng,onChange:function onChange(e){return setNewWordEng(e.target.value);},className:style.input,placeholder:\"English\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newWordRus,onChange:function onChange(e){return setNewWordRus(e.target.value);},className:style.input,placeholder:\"Russian\"}),/*#__PURE__*/_jsx(\"div\",{className:style.col,children:/*#__PURE__*/_jsx(\"button\",{disabled:newWordEng.length===0||newWordRus.length===0,onClick:addWordToServer,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCircleCheck})})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:style.table,children:[/*#__PURE__*/_jsxs(\"div\",{className:style.row,children:[/*#__PURE__*/_jsx(\"div\",{className:style.col,children:\"English\"}),/*#__PURE__*/_jsx(\"div\",{className:style.col,children:\"Transcription\"}),/*#__PURE__*/_jsx(\"div\",{className:style.col,children:\"Russian\"}),/*#__PURE__*/_jsx(\"div\",{className:style.col,children:\"Edit\"})]}),itemsToRender]})]});}));export default Table;","map":{"version":3,"names":["observer","inject","React","useState","useEffect","TableItem","POST","DEL","PUT","style","FontAwesomeIcon","faCircleCheck","jsx","_jsx","jsxs","_jsxs","Table","_ref","wordStore","_useState","_useState2","_slicedToArray","newWordEng","setNewWordEng","_useState3","_useState4","newWordRus","setNewWordRus","_useState5","_useState6","itemsToRender","setItemsToRender","timer","setTimeout","getWordServer","words","map","item","index","_objectSpread","flag","setFlag","toggleFlag","delWord","deleteWord","id","updWord","updatedData","updateWord","clearTimeout","_x","_deleteWord","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","console","log","stop","_x2","_x3","_updateWord","_callee2","_callee2$","_context2","putWord","addWordToServer","_addWordToServer","_callee3","newWordData","_callee3$","_context3","trim","abrupt","english","transcription","russian","tags","tags_json","postWord","children","className","table","row_input","type","value","onChange","e","target","input","placeholder","col","disabled","length","onClick","icon","row"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Table/Table.jsx"],"sourcesContent":["import { observer, inject } from 'mobx-react';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TableItem from \"../../components/TableItem/TableItem\";\r\nimport POST from \"../../services/POST\";\r\nimport DEL from \"../../services/DEL\";\r\nimport PUT from \"../../services/PUT\";\r\nimport style from './table.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\n  const Table = inject('wordStore')(observer(({ wordStore }) => {\r\n  const [newWordEng, setNewWordEng] = useState('');\r\n  const [newWordRus, setNewWordRus] = useState('');\r\n  const [itemsToRender, setItemsToRender] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      wordStore.getWordServer();\r\n      setItemsToRender(wordStore.words.map((item, index) => (\r\n        <TableItem\r\n          key={index}\r\n          {...item} flag={wordStore.flag} setFlag={wordStore.toggleFlag}\r\n          delWord={() => deleteWord(item.id)} updWord={(id, updatedData) => updateWord(id, updatedData)} />\r\n      )));\r\n    }, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [wordStore.words, wordStore.flag]);\r\n\r\n\r\n  async function deleteWord(id) {\r\n    await DEL.delWord(id);\r\n    console.log(\"delete\")\r\n  }\r\n\r\nasync function updateWord (id,updatedData) { \r\n    await PUT.putWord(id, updatedData); \r\n    console.log(\"updated\", wordStore)\r\n} \r\n\r\n  async function addWordToServer() {\r\n    if (newWordEng.trim() === '' || newWordRus.trim() === '') {\r\n      return;\r\n    }\r\n    const newWordData = {\r\n      id: \"123\",\r\n      english: newWordEng,\r\n      transcription: \"transcription\",\r\n      russian: newWordRus,\r\n      tags: \"\",\r\n      tags_json: \"[]\"\r\n    };\r\n    await POST.postWord(newWordData);\r\n    setNewWordEng('');\r\n    setNewWordRus('');\r\n    wordStore.toggleFlag();\r\n    wordStore.getWordServer();\r\n    console.log(2222);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.table}>\r\n        <div className={style.row_input}>\r\n          <input type=\"text\" value={newWordEng} onChange={(e) => setNewWordEng(e.target.value)} className={style.input} placeholder=\"English\" />\r\n          <input type=\"text\" value={newWordRus} onChange={(e) => setNewWordRus(e.target.value)} className={style.input} placeholder=\"Russian\" />\r\n          <div className={style.col}>\r\n            <button disabled={newWordEng.length === 0 || newWordRus.length === 0} onClick={addWordToServer}><FontAwesomeIcon icon={faCircleCheck} /></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={style.table}>\r\n        <div className={style.row}>\r\n          <div className={style.col}>English</div>\r\n          <div className={style.col}>Transcription</div>\r\n          <div className={style.col}>Russian</div>\r\n          <div className={style.col}>Edit</div>\r\n        </div>\r\n        {itemsToRender}\r\n      </div>\r\n    </div>\r\n  );\r\n}));\r\n\r\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}