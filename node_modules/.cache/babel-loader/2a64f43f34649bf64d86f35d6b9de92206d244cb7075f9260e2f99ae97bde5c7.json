{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Slider\\\\Slider.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Card from \"../../components/Card/Card\";\nimport { MyContext } from \"../../context/MyContext\";\nimport { useContext } from \"react\";\nimport arr from \"../../data/words.json\";\nimport style from \"./slider.module.scss\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleLeft, faCircleRight } from '@fortawesome/free-solid-svg-icons'; //импортируем компонент Card, массив с данными для карточек, стили\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slider() {\n  _s();\n  //создаем компонент Slider\n\n  const [translated, setTranslated] = useState(true); //создаем состояние для кнопки перевода\n  const [count, setCount] = useState(0); //получаем индекс объекта массива, чтобы получить нужный нам объект, изначальный индекс 0\n  const [cardCount, setCardCount] = useState(0); //задаем состояние для подсчета изученных карточек\n  const {\n    words\n  } = useContext(MyContext);\n  const object = words[count]; //создаем переменную для объекта массива\n\n  function handleClickCount() {\n    //создаем функцию для подсчета изученных карточек\n    setCardCount(cardCount + 1);\n  }\n  function showTranslation() {\n    //создаем функцию, которая сработает при нажатии на кнопку перевода\n    setTranslated(false); //изменить translated на false\n    handleClickCount();\n  }\n  function handleClickPrev() {\n    let copyCount = count;\n    if (copyCount === 0) {\n      setCount(words.length - 1);\n    } else {\n      setCount(copyCount - 1);\n    }\n    setTranslated(true);\n  }\n  function handleClickNext() {\n    let copyCount = count;\n    if (copyCount === words.length - 1) {\n      setCount(0);\n    } else {\n      setCount(copyCount + 1);\n    }\n    setTranslated(true);\n  }\n  if (!words) {\n    // если массив не был передан, то высвечивается сообщение о загрузке\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.slider,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.button_prev,\n        onClick: handleClickPrev,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        english: object.english,\n        transcription: object.transcription,\n        russian: object.russian,\n        index: object.index,\n        translated: translated,\n        showTranslation: showTranslation\n      }, object.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.button_next,\n        onClick: handleClickNext,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.text,\n      children: [\"Cards studied: \", cardCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Slider, \"7LBDYmAU1Mk5F8VwC1w2oax/7Ec=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["useState","Card","MyContext","useContext","arr","style","FontAwesomeIcon","faCircleLeft","faCircleRight","jsxDEV","_jsxDEV","Slider","_s","translated","setTranslated","count","setCount","cardCount","setCardCount","words","object","handleClickCount","showTranslation","handleClickPrev","copyCount","length","handleClickNext","children","fileName","_jsxFileName","lineNumber","columnNumber","className","slider","button_prev","onClick","icon","english","transcription","russian","index","button_next","text","_c","$RefreshReg$"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Slider/Slider.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport Card from \"../../components/Card/Card\"\r\nimport { MyContext } from \"../../context/MyContext\";\r\nimport { useContext } from \"react\";\r\nimport arr from \"../../data/words.json\"\r\nimport style from \"./slider.module.scss\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleLeft,faCircleRight } from '@fortawesome/free-solid-svg-icons';  //импортируем компонент Card, массив с данными для карточек, стили\r\n\r\n\r\nfunction Slider(){ //создаем компонент Slider\r\n    \r\n\r\n    const [translated, setTranslated] = useState (true); //создаем состояние для кнопки перевода\r\n    const [count, setCount] = useState (0) //получаем индекс объекта массива, чтобы получить нужный нам объект, изначальный индекс 0\r\n    const [cardCount, setCardCount] = useState (0) //задаем состояние для подсчета изученных карточек\r\n    const {words} = useContext(MyContext) \r\n\r\n    \r\n    const object = words[count] //создаем переменную для объекта массива\r\n    \r\n\r\n    function handleClickCount (){ //создаем функцию для подсчета изученных карточек\r\n        setCardCount(cardCount + 1);\r\n    }  \r\n\r\n    function showTranslation () { //создаем функцию, которая сработает при нажатии на кнопку перевода\r\n        setTranslated(false); //изменить translated на false\r\n        handleClickCount ();  \r\n    }\r\n\r\n  \r\n\r\n    function handleClickPrev() {\r\n        let copyCount = count;\r\n        if (copyCount === 0) {\r\n          setCount(words.length - 1);\r\n        } else {\r\n          setCount(copyCount - 1);\r\n        }\r\n        setTranslated(true);\r\n      }\r\n      \r\n      function handleClickNext() {\r\n        let copyCount = count;\r\n        if (copyCount === words.length - 1) {\r\n          setCount(0);\r\n        } else {\r\n          setCount(copyCount + 1);\r\n        }\r\n        setTranslated(true);\r\n      }\r\n    \r\n\r\nif (!words){ // если массив не был передан, то высвечивается сообщение о загрузке\r\n    return <h1>loading</h1>\r\n}\r\n\r\n\r\n    return ( \r\n        <div>\r\n        <div className={style.slider}>\r\n         <button className={style.button_prev} onClick={handleClickPrev}><FontAwesomeIcon icon={faCircleLeft} /></button> \r\n        <Card \r\n        english = {object.english}\r\n        transcription = {object.transcription}\r\n        russian = {object.russian}\r\n        index = {object.index}\r\n        key = {object.index}\r\n        translated = {translated}\r\n        showTranslation = {showTranslation}\r\n        \r\n        />\r\n    <button className={style.button_next} onClick={handleClickNext}><FontAwesomeIcon icon={faCircleRight} /></button>\r\n    \r\n       </div>\r\n       <div className={style.text}>Cards studied: {cardCount}</div>\r\n       </div>\r\n       \r\n        \r\n    )\r\n}\r\n\r\nexport default Slider;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,GAAG,MAAM,uBAAuB;AACvC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,YAAY,EAACC,aAAa,QAAQ,mCAAmC,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjF,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EAAE;;EAGf,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAE,IAAI,CAAC,CAAC,CAAC;EACrD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAE,CAAC,CAAC,EAAC;EACvC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAE,CAAC,CAAC,EAAC;EAC/C,MAAM;IAACmB;EAAK,CAAC,GAAGhB,UAAU,CAACD,SAAS,CAAC;EAGrC,MAAMkB,MAAM,GAAGD,KAAK,CAACJ,KAAK,CAAC,EAAC;;EAG5B,SAASM,gBAAgBA,CAAA,EAAG;IAAE;IAC1BH,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;EAC/B;EAEA,SAASK,eAAeA,CAAA,EAAI;IAAE;IAC1BR,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IACtBO,gBAAgB,CAAE,CAAC;EACvB;EAIA,SAASE,eAAeA,CAAA,EAAG;IACvB,IAAIC,SAAS,GAAGT,KAAK;IACrB,IAAIS,SAAS,KAAK,CAAC,EAAE;MACnBR,QAAQ,CAACG,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC;IAC5B,CAAC,MAAM;MACLT,QAAQ,CAACQ,SAAS,GAAG,CAAC,CAAC;IACzB;IACAV,aAAa,CAAC,IAAI,CAAC;EACrB;EAEA,SAASY,eAAeA,CAAA,EAAG;IACzB,IAAIF,SAAS,GAAGT,KAAK;IACrB,IAAIS,SAAS,KAAKL,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;MAClCT,QAAQ,CAAC,CAAC,CAAC;IACb,CAAC,MAAM;MACLA,QAAQ,CAACQ,SAAS,GAAG,CAAC,CAAC;IACzB;IACAV,aAAa,CAAC,IAAI,CAAC;EACrB;EAGN,IAAI,CAACK,KAAK,EAAC;IAAE;IACT,oBAAOT,OAAA;MAAAiB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC3B;EAGI,oBACIrB,OAAA;IAAAiB,QAAA,gBACAjB,OAAA;MAAKsB,SAAS,EAAE3B,KAAK,CAAC4B,MAAO;MAAAN,QAAA,gBAC5BjB,OAAA;QAAQsB,SAAS,EAAE3B,KAAK,CAAC6B,WAAY;QAACC,OAAO,EAAEZ,eAAgB;QAAAI,QAAA,eAACjB,OAAA,CAACJ,eAAe;UAAC8B,IAAI,EAAE7B;QAAa;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjHrB,OAAA,CAACT,IAAI;QACLoC,OAAO,EAAIjB,MAAM,CAACiB,OAAQ;QAC1BC,aAAa,EAAIlB,MAAM,CAACkB,aAAc;QACtCC,OAAO,EAAInB,MAAM,CAACmB,OAAQ;QAC1BC,KAAK,EAAIpB,MAAM,CAACoB,KAAM;QAEtB3B,UAAU,EAAIA,UAAW;QACzBS,eAAe,EAAIA;MAAgB,GAF5BF,MAAM,CAACoB,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIlB,CAAC,eACNrB,OAAA;QAAQsB,SAAS,EAAE3B,KAAK,CAACoC,WAAY;QAACN,OAAO,EAAET,eAAgB;QAAAC,QAAA,eAACjB,OAAA,CAACJ,eAAe;UAAC8B,IAAI,EAAE5B;QAAc;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzG,CAAC,eACNrB,OAAA;MAAKsB,SAAS,EAAE3B,KAAK,CAACqC,IAAK;MAAAf,QAAA,GAAC,iBAAe,EAACV,SAAS;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAIb;AAACnB,EAAA,CAvEQD,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAyEf,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}