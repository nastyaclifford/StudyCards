{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport TableItem from \"../../components/TableItem/TableItem\";\nimport POST from \"../../services/POST\";\nimport { MyContext } from \"../../context/MyContext\";\nimport { useContext, useState } from \"react\";\nimport style from './table.module.scss'; //импортируем компонент TableItem, массив с информацией о карточках, стили\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenToSquare, faCircleCheck, faRotateLeft, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  //создаем компонент Table\n  const {\n    words,\n    flag,\n    setFlag\n  } = useContext(MyContext);\n  const [newWord, setNewWord] = useState('');\n  async function addWordToServer() {\n    if (newWord.trim() === '') {\n      return;\n    }\n    const newWordData = {\n      id: \"123\",\n      english: newWord,\n      transcription: \"something\",\n      russian: \"перевод\",\n      tags: \"\",\n      tags_json: \"[]\"\n    };\n    await POST.postWord(newWordData);\n    setNewWord('');\n    setFlag(!flag);\n  }\n  return (\n    /*#__PURE__*/\n    //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.row,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onKeyPress: checkLang,\n          value: newWordEng,\n          onChange: e => setNewWord(e.target.value),\n          placeholder: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newWordRus,\n          onChange: e => setNewWord(e.target.value),\n          placeholder: \"Russian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col_buttons,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: newWordEng.length === 0 || newWordRus.length === 0,\n              onClick: onSaveButtonClick,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 121\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newWord,\n        onChange: e => setNewWord(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addWordToServer,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043B\\u043E\\u0432\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.table,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.row,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Russian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.col,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), words.map((item, index) => /*#__PURE__*/_jsxDEV(TableItem, {\n          ...item,\n          flag: flag,\n          setFlag: setFlag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Table, \"n564tGK1HTg1XcAtUvE8faJPDJo=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["TableItem","POST","MyContext","useContext","useState","style","FontAwesomeIcon","faPenToSquare","faCircleCheck","faRotateLeft","faTrash","jsxDEV","_jsxDEV","Table","_s","words","flag","setFlag","newWord","setNewWord","addWordToServer","trim","newWordData","id","english","transcription","russian","tags","tags_json","postWord","children","className","row","type","onKeyPress","checkLang","value","newWordEng","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","newWordRus","col","col_buttons","disabled","length","onClick","onSaveButtonClick","icon","table","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Table/Table.jsx"],"sourcesContent":["import TableItem from \"../../components/TableItem/TableItem\"\r\nimport POST from \"../../services/POST\";\r\nimport { MyContext } from \"../../context/MyContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport style from './table.module.scss' //импортируем компонент TableItem, массив с информацией о карточках, стили\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPenToSquare, faCircleCheck, faRotateLeft, faTrash } from '@fortawesome/free-solid-svg-icons'; \r\n\r\n\r\n\r\nfunction Table(){ //создаем компонент Table\r\n    const {words, flag, setFlag} = useContext(MyContext) \r\n    const [newWord, setNewWord] = useState('')\r\n    \r\n    async function addWordToServer() {\r\n        if (newWord.trim() === '') {\r\n            return;\r\n          }\r\n          const newWordData = {\r\n            id: \"123\", \r\n            english: newWord,\r\n            transcription: \"something\", \r\n            russian: \"перевод\", \r\n            tags: \"\",\r\n            tags_json: \"[]\"\r\n          };\r\n          await POST.postWord(newWordData);\r\n          setNewWord('');\r\n          setFlag(!flag);\r\n    }\r\n    return ( //возвращаем разметку таблицы, создаем функцию map для обращения к каждому объекту из массива и использования их в TableItem\r\n        <div>\r\n        \r\n         <div className={style.row}>\r\n                    <input\r\n  type=\"text\"\r\n  onKeyPress = {checkLang}\r\n  value={newWordEng}\r\n  onChange={(e) => setNewWord(e.target.value)} \r\n  placeholder=\"English\"\r\n/>\r\n<input\r\n  type=\"text\"\r\n  value={newWordRus}\r\n  onChange={(e) => setNewWord(e.target.value)} \r\n  placeholder=\"Russian\"\r\n/>\r\n                    <div className={style.col}>\r\n                    <div className={style.col_buttons}>\r\n                   <button disabled= {newWordEng.length === 0 || newWordRus.length === 0}  onClick={onSaveButtonClick} ><FontAwesomeIcon icon={faCircleCheck} /></button>\r\n                </div>  \r\n                </div>  \r\n                </div>  \r\n\r\n\r\n\r\n\r\n\r\n       <input\r\n  type=\"text\"\r\n  value={newWord}\r\n  onChange={(e) => setNewWord(e.target.value)} \r\n  placeholder=\"Введите слово\"\r\n/>\r\n<button onClick={addWordToServer}>Добавить слово</button>\r\n        <div className={style.table}>\r\n        <div className={style.row}>\r\n        <div className={style.col}>English</div>\r\n        <div className={style.col}>Transcription</div>\r\n        <div className={style.col}>Russian</div>\r\n        <div className={style.col}>Edit</div>\r\n        </div>\r\n\r\n        {words.map ((item, index)=> (\r\n        <TableItem \r\n        key = {index}\r\n        {...item} flag={flag} setFlag={setFlag}/>))}</div>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}