{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\Desktop\\\\IT GIRLS\\\\ProjectReact_Cards\\\\React_project_WordCards\\\\word-cards\\\\src\\\\pages\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport { observer, inject } from 'mobx-react';\nimport React, { useState, useEffect } from \"react\";\nimport TableItem from \"../../components/TableItem/TableItem\";\nimport POST from \"../../services/POST\";\nimport DEL from \"../../services/DEL\";\nimport GET from \"../../services/GET\";\nimport style from './table.module.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = _s(inject('wordStore')(_s(observer(_s(({\n  wordStore\n}) => {\n  _s();\n  const [newWordEng, setNewWordEng] = useState('');\n  const [newWordRus, setNewWordRus] = useState('');\n  const [itemsToRender, setItemsToRender] = useState([]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      var _wordStore$words;\n      wordStore = getWordServer();\n      setItemsToRender((_wordStore$words = wordStore.words) === null || _wordStore$words === void 0 ? void 0 : _wordStore$words.map((item, index) => /*#__PURE__*/_jsxDEV(TableItem, {\n        ...item,\n        flag: wordStore.flag,\n        setFlag: wordStore.toggleFlag,\n        deleteWord: () => deleteWord(item.id)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)));\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [wordStore.words, wordStore.flag]);\n  async function deleteWord(id) {\n    await DEL.delWord(id);\n  }\n  async function addWordToServer() {\n    if (newWordEng.trim() === '' || newWordRus.trim() === '') {\n      return;\n    }\n    const newWordData = {\n      id: \"123\",\n      english: newWordEng,\n      transcription: \"transcription\",\n      russian: newWordRus,\n      tags: \"\",\n      tags_json: \"[]\"\n    };\n    wordStore.getWordServer();\n    await POST.postWord(newWordData);\n    setNewWordEng('');\n    setNewWordRus('');\n    wordStore.toggleFlag();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.table,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.row_input,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newWordEng,\n          onChange: e => setNewWordEng(e.target.value),\n          className: style.input,\n          placeholder: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newWordRus,\n          onChange: e => setNewWordRus(e.target.value),\n          className: style.input,\n          placeholder: \"Russian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: newWordEng.length === 0 || newWordRus.length === 0,\n            onClick: addWordToServer,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 106\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.table,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.row,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: \"Transcription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: \"Russian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.col,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 1\n  }, this);\n}, \"7cCauUUfNFCHtyz13EAbQdPP2Is=\")), \"7cCauUUfNFCHtyz13EAbQdPP2Is=\")), \"7cCauUUfNFCHtyz13EAbQdPP2Is=\");\nexport default Table;","map":{"version":3,"names":["observer","inject","React","useState","useEffect","TableItem","POST","DEL","GET","style","FontAwesomeIcon","faCircleCheck","jsxDEV","_jsxDEV","Table","_s","wordStore","newWordEng","setNewWordEng","newWordRus","setNewWordRus","itemsToRender","setItemsToRender","timer","setTimeout","_wordStore$words","getWordServer","words","map","item","index","flag","setFlag","toggleFlag","deleteWord","id","fileName","_jsxFileName","lineNumber","columnNumber","clearTimeout","delWord","addWordToServer","trim","newWordData","english","transcription","russian","tags","tags_json","postWord","children","className","table","row_input","type","value","onChange","e","target","input","placeholder","col","disabled","length","onClick","icon","row"],"sources":["C:/Users/anast/Desktop/IT GIRLS/ProjectReact_Cards/React_project_WordCards/word-cards/src/pages/Table/Table.jsx"],"sourcesContent":["import {observer,inject} from 'mobx-react';\r\nimport React, {useState, useEffect } from \"react\";\r\nimport TableItem from \"../../components/TableItem/TableItem\"\r\nimport POST from \"../../services/POST\";\r\nimport DEL from \"../../services/DEL\";\r\nimport GET from \"../../services/GET\";\r\nimport style from './table.module.scss' \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCircleCheck} from '@fortawesome/free-solid-svg-icons'; \r\n\r\n\r\nconst Table = inject('wordStore')(observer(({wordStore})=>{\r\n\r\nconst [newWordEng, setNewWordEng] = useState('')\r\nconst [newWordRus, setNewWordRus] = useState('')\r\nconst [itemsToRender, setItemsToRender] = useState([])\r\n\r\nuseEffect(() =>{\r\n  const timer = setTimeout(()=> {\r\n    wordStore = getWordServer()\r\n    setItemsToRender(wordStore.words?.map((item,index) => (\r\n    <TableItem \r\n      key = {index}\r\n      {...item} flag={wordStore.flag} setFlag={wordStore.toggleFlag} \r\n      deleteWord={()=>deleteWord(item.id)} />\r\n      )));\r\n},1000);\r\nreturn ()=> clearTimeout(timer);\r\n}, [wordStore.words, wordStore.flag]);\r\n\r\n\r\nasync function deleteWord (id) { \r\n  await DEL.delWord(id)\r\n}\r\n\r\n\r\n\r\nasync function addWordToServer() {\r\n    if (newWordEng.trim() === '' || newWordRus.trim() === '') {\r\n        return;\r\n      }\r\n      const newWordData = {\r\n        id: \"123\", \r\n        english: newWordEng,\r\n        transcription: \"transcription\", \r\n        russian: newWordRus, \r\n        tags: \"\",\r\n        tags_json: \"[]\"\r\n      };\r\n      wordStore.getWordServer()\r\n      await POST.postWord(newWordData);\r\n      setNewWordEng('');\r\n      setNewWordRus('');\r\n      wordStore.toggleFlag();\r\n}\r\n\r\nreturn ( \r\n<div>\r\n  <div className={style.table}>\r\n    <div className={style.row_input}>\r\n      <input type=\"text\" value={newWordEng} onChange={(e) => setNewWordEng(e.target.value)} className = {style.input} placeholder=\"English\"/>\r\n      <input type=\"text\" value={newWordRus} onChange={(e) => setNewWordRus(e.target.value)} className = {style.input} placeholder=\"Russian\"/>\r\n    <div className={style.col}>\r\n      <button disabled= {newWordEng.length === 0 || newWordRus.length === 0}  onClick={addWordToServer} ><FontAwesomeIcon icon={faCircleCheck} /></button> \r\n    </div>  \r\n    </div>  \r\n  </div>\r\n  <div className={style.table}>\r\n    <div className={style.row}>\r\n      <div className={style.col}>English</div>\r\n      <div className={style.col}>Transcription</div>\r\n      <div className={style.col}>Russian</div>\r\n      <div className={style.col}>Edit</div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n)}))\r\n\r\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}